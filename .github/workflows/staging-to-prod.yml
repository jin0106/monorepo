name: Merge Staging to Prod & Dev

on:
  workflow_dispatch:
    inputs:
      sprint-number:
        type: string
        description: sprint number
        required: true


permissions:
  pull-requests: write
  contents: write

jobs:
  # staging 브랜치를 main 브랜치에 머지하는 PR 생성 후 자동 머지
  merge-staging-to-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging


      - name: Create Pull Request
        run: |
          gh pr create --title "🚀 Sprint ${{ github.event.inputs.sprint-number }}" --body "Sprint ${{ github.event.inputs.sprint-number }}" --assignee @me --base main --head staging
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Wait for PR to be created
        run: |
          echo "Waiting for PR creation to propagate..."
          sleep 1  # 3초 기다려 PR이 생성되도록 함

      - name: Get PR Number
        id: get-pr-number
        run: |
          PR_NUMBER=$(gh pr list --state open --base main --head staging --json number -q '.[0].number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Merge Pull Request
        run: |
          if [ -z "$PR_NUMBER" ]; then
           echo "PR not found. Exiting."
           exit 1
          fi
          
          PR_STATUS=$(gh pr view $PR_NUMBER --json state -q ".state")
          
          echo gh pr view $PR_NUMBER --json state -q ".state"
          
          
          if [ "$PR_STATUS" == "OPEN" ]; then
            gh pr merge --merge $PR_NUMBER
            echo "PR $PR_NUMBER merged successfully."
          else
            echo "PR $PR_NUMBER is not open or already merged."
          fi

        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  merge-staging-to-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0

      - name: Check Differences Between Staging and Dev
        run: |
          git fetch origin staging
          if git diff --quiet origin/dev origin/staging; then
            echo "No changes detected between staging and dev. Skipping PR creation."
            echo "should_skip=true" >> $GITHUB_ENV
          else
            echo "Changes detected. Proceeding with PR creation."
            echo "should_skip=false" >> $GITHUB_ENV
          fi


      - name: Create Pull Request
        if: env.should_skip == 'false'
        run: |
          gh pr create --title "🔀 Sprint ${{ github.event.inputs.sprint-number }}, staging -> dev" --body "Sprint ${{ github.event.inputs.sprint-number }}" --assignee @me --base dev --head staging
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Wait for PR to be created
        run: |
          echo "Waiting for PR creation to propagate..."
          sleep 1  # 3초 기다려 PR이 생성되도록 함

      - name: Get PR Number
        id: get-pr-number
        run: |
          PR_DEV_NUMBER=$(gh pr list --state open --base dev --head staging --json number -q '.[0].number')
          echo "PR_DEV_NUMBER=$PR_DEV_NUMBER" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}


      - name: Merge Pull Request
        if: env.should_skip == 'false'
        run: |
          if [ -z "$PR_DEV_NUMBER" ]; then
           echo "PR not found. Exiting."
           exit 1
          fi
          
          PR_DEV_STATUS=$(gh pr view $PR_DEV_NUMBER --json state -q ".state")
          
          
          if [ "$PR_DEV_STATUS" == "OPEN" ]; then
            gh pr merge --merge $PR_DEV_NUMBER
            echo "PR $PR_DEV_NUMBER merged successfully."
          else
            echo "PR $PR_DEV_NUMBER is already merged or closed."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}



