name: Deploy

on:
  workflow_dispatch:
    inputs:
      app:
        description: "Select app to be deployed"
        required: true
        default: "APP1"
        type: choice
        options:
          - APP1
          - APP2

jobs:
  deploy:
    if: github.ref_name == 'main' || github.ref_name == 'staging'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ github.event.inputs.app == 'APP1' && secrets.VERCEL_PROJECT_ID_APP1 || secrets.VERCEL_PROJECT_ID_APP2 }}

    steps:
      - uses: actions/checkout@v4

      - name: Set App Name for slack notification
        run: |
          if [[ "${{ github.event.inputs.app }}" == "NEUBIE_GO" ]]; then
            echo "APP_NAME=Îâ¥ÎπÑÍ≥†" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.app }}" == "NEUBIE_ORDER" ]]; then
            echo "APP_NAME=Îâ¥ÎπÑÏò§Îçî" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.app }}" == "NEUBIE_ORDER_ADMIN" ]]; then
            echo "APP_NAME=Îâ¥ÎπÑÏò§Îçî Ïñ¥ÎìúÎØº" >> $GITHUB_ENV
          fi

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Remove .vercel (clean broken link)
        run: rm -rf .vercel

      - name: Pull Vercel Environment Information
        run: |

          if [ "${{ github.ref_name }}" == "main" ]; then
            vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel pull --yes --environment=preview --git-branch=staging --token=${{ secrets.VERCEL_TOKEN }}
          fi


      - name: Build Project Artifacts
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            vercel build --prod 
          else
            vercel build 
          fi

      - name: Deploy Project Artifacts to Vercel
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || job.status == 'failure' && 'danger' || 'warning' }}
          SLACK_CUSTOM_PAYLOAD: '{
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*üöÄ ÌîÑÎ°†Ìä∏ÏóîÎìú Î∞∞Ìè¨ ÏãúÏûë ÏïåÎ¶º*"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Ïï±: *${{ github.event.inputs.app }}* \nÎ∞∞Ìè¨ ÌôòÍ≤Ω: *${{ github.ref_name }}*\n Î∞∞Ìè¨ Í≤∞Í≥º: *${{ job.status }}*"
                }
              }
            ]
          }'