name: Deploy to Vercel

on:
  workflow_dispatch:
    inputs:
      app:
        description: "Select app to be deployed"
        required: true
        default: "APP1"
        type: choice
        options:
          - APP1
          - APP2

jobs:
  deploy:
    if: github.ref_name == 'main' || github.ref_name == 'staging'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets[format('VERCEL_PROJECT_ID_{0}', github.event.inputs.app)]}}

    steps:
      - uses: actions/checkout@v2

      - name: Get package current version
        id: package-current-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Set App Name for Slack Notification
        id: set-slack-title
        run: |
          if [ "${{ github.event.inputs.app }}" == "APP1" ]; then
            echo "SLACK_TITLE_NAME=Îâ¥ÎπÑÍ≥†" >> $GITHUB_ENV
          else
            echo "SLACK_TITLE_NAME=Îâ¥ÎπÑÏò§Îçî" >> $GITHUB_ENV
          fi


      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel pull --yes --environment=preview --git-branch=staging --token=${{ secrets.VERCEL_TOKEN }}
          fi


      - name: Build Project Artifacts
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Deploy Project Artifacts to Vercel
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_CUSTOM_PAYLOAD: '{
        "blocks": [
          {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "üöÄ ÌîÑÎ°†Ìä∏ÏóîÎìú Î∞∞Ìè¨ ÏïåÎ¶º"
            }
          },
          {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "Ïï±: *${{ github.event.inputs.app }}* \nÎ∞∞Ìè¨ ÌôòÍ≤Ω: *${{ github.ref_name }}*\nÎ≤ÑÏ†Ñ: *v${{  steps.package-current-version.outputs.current-version }}*\n Î∞∞Ìè¨ Í≤∞Í≥º: *${{ job.status }}*"
            }
          }
        ]}
      '
